# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = clang
endif

ifndef CXX
  CXX = clang++
endif

ifndef AR
  AR = ar
endif

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

ifeq ($(config),debug)
  OBJDIR     = obj/Debug/local_freetype2
  TARGETDIR  = ../../lib/univ_d
  TARGET     = $(TARGETDIR)/liblocal_freetype2_d.dylib
  DEFINES   += -D_MACOSX -D_DEBUG -DDEBUG -DTEST_NASTY_CONDITIONS -DDISABLE_CPP11 -DGLEW_NO_GLU -DDISABLE_CG -DOGG_DLL= -DVORBIS_DLL= -DVORBISFILE_DLL= -DDISABLE_DX9 -DDISABLE_WGL -DTINYXML_DLL= -DTINYXML_EXT= -DZENI_DLL= -DZENI_EXT= -DZENI_AUDIO_DLL= -DZENI_AUDIO_EXT= -DZENI_CORE_DLL= -DZENI_CORE_EXT= -DZENI_GRAPHICS_DLL= -DZENI_GRAPHICS_EXT= -DZENI_NET_DLL= -DZENI_NET_EXT= -DZENI_REST_DLL= -DZENI_REST_EXT= -DBUILD_FREETYPE2_DLL -DFT_MACINTOSH -D_LIB -DFT2_BUILD_LIBRARY=1
  INCLUDES  += -I../../jni/external/freetype2/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -fPIC -Qunused-arguments -stdlib=libc++ -w
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L../../lib/univ_d -dynamiclib -flat_namespace -stdlib=libc++ -install_name @loader_path/liblocal_freetype2_d.dylib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LIBS      += -framework Carbon
  LDDEPS    += 
  LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = obj/Release/local_freetype2
  TARGETDIR  = ../../lib/univ
  TARGET     = $(TARGETDIR)/liblocal_freetype2.dylib
  DEFINES   += -D_MACOSX -DNDEBUG -DDISABLE_CPP11 -DGLEW_NO_GLU -DDISABLE_CG -DOGG_DLL= -DVORBIS_DLL= -DVORBISFILE_DLL= -DDISABLE_DX9 -DDISABLE_WGL -DTINYXML_DLL= -DTINYXML_EXT= -DZENI_DLL= -DZENI_EXT= -DZENI_AUDIO_DLL= -DZENI_AUDIO_EXT= -DZENI_CORE_DLL= -DZENI_CORE_EXT= -DZENI_GRAPHICS_DLL= -DZENI_GRAPHICS_EXT= -DZENI_NET_DLL= -DZENI_NET_EXT= -DZENI_REST_DLL= -DZENI_REST_EXT= -DBUILD_FREETYPE2_DLL -DFT_MACINTOSH -D_LIB -DFT2_BUILD_LIBRARY=1
  INCLUDES  += -I../../jni/external/freetype2/include
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -fPIC -Qunused-arguments -stdlib=libc++ -w
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L../../lib/univ -Wl,-x -dynamiclib -flat_namespace -stdlib=libc++ -install_name @loader_path/liblocal_freetype2.dylib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LIBS      += -framework Carbon
  LDDEPS    += 
  LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debuguniv)
  OBJDIR     = obj/Universal/Debug/local_freetype2
  TARGETDIR  = ../../lib/univ_d
  TARGET     = $(TARGETDIR)/liblocal_freetype2_d.dylib
  DEFINES   += -D_MACOSX -D_DEBUG -DDEBUG -DTEST_NASTY_CONDITIONS -DDISABLE_CPP11 -DGLEW_NO_GLU -DDISABLE_CG -DOGG_DLL= -DVORBIS_DLL= -DVORBISFILE_DLL= -DDISABLE_DX9 -DDISABLE_WGL -DTINYXML_DLL= -DTINYXML_EXT= -DZENI_DLL= -DZENI_EXT= -DZENI_AUDIO_DLL= -DZENI_AUDIO_EXT= -DZENI_CORE_DLL= -DZENI_CORE_EXT= -DZENI_GRAPHICS_DLL= -DZENI_GRAPHICS_EXT= -DZENI_NET_DLL= -DZENI_NET_EXT= -DZENI_REST_DLL= -DZENI_REST_EXT= -DBUILD_FREETYPE2_DLL -DFT_MACINTOSH -D_LIB -DFT2_BUILD_LIBRARY=1
  INCLUDES  += -I../../jni/external/freetype2/include
  CPPFLAGS  +=  $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -arch i386 -arch x86_64 -fPIC -Qunused-arguments -stdlib=libc++ -w
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L../../lib/univ_d -dynamiclib -flat_namespace -arch i386 -arch x86_64 -stdlib=libc++ -install_name @loader_path/liblocal_freetype2_d.dylib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LIBS      += -framework Carbon
  LDDEPS    += 
  LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),releaseuniv)
  OBJDIR     = obj/Universal/Release/local_freetype2
  TARGETDIR  = ../../lib/univ
  TARGET     = $(TARGETDIR)/liblocal_freetype2.dylib
  DEFINES   += -D_MACOSX -DNDEBUG -DDISABLE_CPP11 -DGLEW_NO_GLU -DDISABLE_CG -DOGG_DLL= -DVORBIS_DLL= -DVORBISFILE_DLL= -DDISABLE_DX9 -DDISABLE_WGL -DTINYXML_DLL= -DTINYXML_EXT= -DZENI_DLL= -DZENI_EXT= -DZENI_AUDIO_DLL= -DZENI_AUDIO_EXT= -DZENI_CORE_DLL= -DZENI_CORE_EXT= -DZENI_GRAPHICS_DLL= -DZENI_GRAPHICS_EXT= -DZENI_NET_DLL= -DZENI_NET_EXT= -DZENI_REST_DLL= -DZENI_REST_EXT= -DBUILD_FREETYPE2_DLL -DFT_MACINTOSH -D_LIB -DFT2_BUILD_LIBRARY=1
  INCLUDES  += -I../../jni/external/freetype2/include
  CPPFLAGS  +=  $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -arch i386 -arch x86_64 -fPIC -Qunused-arguments -stdlib=libc++ -w
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L../../lib/univ -Wl,-x -dynamiclib -flat_namespace -arch i386 -arch x86_64 -stdlib=libc++ -install_name @loader_path/liblocal_freetype2.dylib
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LIBS      += -framework Carbon
  LDDEPS    += 
  LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/autofit.o \
	$(OBJDIR)/bdf.o \
	$(OBJDIR)/cff.o \
	$(OBJDIR)/ftbase.o \
	$(OBJDIR)/ftbitmap.o \
	$(OBJDIR)/ftcache.o \
	$(OBJDIR)/ftdebug.o \
	$(OBJDIR)/ftfstype.o \
	$(OBJDIR)/ftgasp.o \
	$(OBJDIR)/ftglyph.o \
	$(OBJDIR)/ftinit.o \
	$(OBJDIR)/ftlzw.o \
	$(OBJDIR)/ftstroke.o \
	$(OBJDIR)/ftsystem.o \
	$(OBJDIR)/smooth.o \
	$(OBJDIR)/ftbbox.o \
	$(OBJDIR)/ftmm.o \
	$(OBJDIR)/ftpfr.o \
	$(OBJDIR)/ftsynth.o \
	$(OBJDIR)/fttype1.o \
	$(OBJDIR)/ftwinfnt.o \
	$(OBJDIR)/ftxf86.o \
	$(OBJDIR)/ftlcdfil.o \
	$(OBJDIR)/ftgxval.o \
	$(OBJDIR)/ftotval.o \
	$(OBJDIR)/ftpatent.o \
	$(OBJDIR)/pcf.o \
	$(OBJDIR)/pfr.o \
	$(OBJDIR)/psaux.o \
	$(OBJDIR)/pshinter.o \
	$(OBJDIR)/psmodule.o \
	$(OBJDIR)/raster.o \
	$(OBJDIR)/sfnt.o \
	$(OBJDIR)/truetype.o \
	$(OBJDIR)/type1.o \
	$(OBJDIR)/type1cid.o \
	$(OBJDIR)/type42.o \
	$(OBJDIR)/winfnt.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking local_freetype2
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning local_freetype2
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
ifeq (posix,$(SHELLTYPE))
	-$(SILENT) cp $< $(OBJDIR)
else
	$(SILENT) xcopy /D /Y /Q "$(subst /,\,$<)" "$(subst /,\,$(OBJDIR))" 1>nul
endif
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/autofit.o: ../../jni/external/freetype2/src/autofit/autofit.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/bdf.o: ../../jni/external/freetype2/src/bdf/bdf.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/cff.o: ../../jni/external/freetype2/src/cff/cff.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftbase.o: ../../jni/external/freetype2/src/base/ftbase.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftbitmap.o: ../../jni/external/freetype2/src/base/ftbitmap.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftcache.o: ../../jni/external/freetype2/src/cache/ftcache.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftdebug.o: ../../jni/external/freetype2/src/ftdebug.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftfstype.o: ../../jni/external/freetype2/src/base/ftfstype.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftgasp.o: ../../jni/external/freetype2/src/base/ftgasp.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftglyph.o: ../../jni/external/freetype2/src/base/ftglyph.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftinit.o: ../../jni/external/freetype2/src/base/ftinit.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftlzw.o: ../../jni/external/freetype2/src/lzw/ftlzw.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftstroke.o: ../../jni/external/freetype2/src/base/ftstroke.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftsystem.o: ../../jni/external/freetype2/src/base/ftsystem.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/smooth.o: ../../jni/external/freetype2/src/smooth/smooth.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftbbox.o: ../../jni/external/freetype2/src/base/ftbbox.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftmm.o: ../../jni/external/freetype2/src/base/ftmm.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftpfr.o: ../../jni/external/freetype2/src/base/ftpfr.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftsynth.o: ../../jni/external/freetype2/src/base/ftsynth.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/fttype1.o: ../../jni/external/freetype2/src/base/fttype1.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftwinfnt.o: ../../jni/external/freetype2/src/base/ftwinfnt.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftxf86.o: ../../jni/external/freetype2/src/base/ftxf86.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftlcdfil.o: ../../jni/external/freetype2/src/base/ftlcdfil.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftgxval.o: ../../jni/external/freetype2/src/base/ftgxval.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftotval.o: ../../jni/external/freetype2/src/base/ftotval.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ftpatent.o: ../../jni/external/freetype2/src/base/ftpatent.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/pcf.o: ../../jni/external/freetype2/src/pcf/pcf.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/pfr.o: ../../jni/external/freetype2/src/pfr/pfr.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/psaux.o: ../../jni/external/freetype2/src/psaux/psaux.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/pshinter.o: ../../jni/external/freetype2/src/pshinter/pshinter.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/psmodule.o: ../../jni/external/freetype2/src/psnames/psmodule.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/raster.o: ../../jni/external/freetype2/src/raster/raster.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/sfnt.o: ../../jni/external/freetype2/src/sfnt/sfnt.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/truetype.o: ../../jni/external/freetype2/src/truetype/truetype.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/type1.o: ../../jni/external/freetype2/src/type1/type1.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/type1cid.o: ../../jni/external/freetype2/src/cid/type1cid.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/type42.o: ../../jni/external/freetype2/src/type42/type42.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"
$(OBJDIR)/winfnt.o: ../../jni/external/freetype2/src/winfonts/winfnt.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(CFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
