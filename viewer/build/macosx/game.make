# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = clang
endif

ifndef CXX
  CXX = clang++
endif

ifndef AR
  AR = ar
endif

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

ifeq ($(config),debug)
  OBJDIR     = obj/Debug/game
  TARGETDIR  = ../../game_d.app/Contents/MacOS
  TARGET     = $(TARGETDIR)/game_d
  DEFINES   += -D_MACOSX -D_DEBUG -DDEBUG -DTEST_NASTY_CONDITIONS -DDISABLE_CPP11 -DGLEW_NO_GLU -DDISABLE_CG -DOGG_DLL= -DVORBIS_DLL= -DVORBISFILE_DLL= -DDISABLE_DX9 -DDISABLE_WGL -DTINYXML_DLL= -DTINYXML_EXT= -DZENI_DLL= -DZENI_EXT= -DZENI_AUDIO_DLL= -DZENI_AUDIO_EXT= -DZENI_CORE_DLL= -DZENI_CORE_EXT= -DZENI_GRAPHICS_DLL= -DZENI_GRAPHICS_EXT= -DZENI_NET_DLL= -DZENI_NET_EXT= -DZENI_REST_DLL= -DZENI_REST_EXT=
  INCLUDES  += -I../../jni/application -I../../jni/external/zenilib -I../../jni/external/zenilib/zeni_rest -I../../jni/external/zenilib/zeni_graphics -I../../jni/external/zenilib/zeni_net -I../../jni/external/zenilib/zeni_core -I../../jni/external/zenilib/zeni_audio -I../../jni/external/libvorbis/include -I../../jni/external/libogg/include -I../../jni/external/zenilib/zeni -I../../jni/external/sdl_net -I../../jni/external/sdl -I../../jni/external/tinyxml
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -Wall -Qunused-arguments -stdlib=libc++ -ffast-math -fpch-preprocess -Wall
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L../../lib/univ_d -stdlib=libc++
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LIBS      += -lzeni_rest_d -lzeni_graphics_d -lzeni_net_d -lzeni_core_d -lzeni_audio_d -lzeni_d -llocal_SDL_d -framework Cocoa -framework OpenGL
  LDDEPS    += ../../lib/univ_d/libzeni_rest_d.dylib ../../lib/univ_d/libzeni_graphics_d.dylib ../../lib/univ_d/libzeni_net_d.dylib ../../lib/univ_d/libzeni_core_d.dylib ../../lib/univ_d/libzeni_audio_d.dylib ../../lib/univ_d/libzeni_d.dylib ../../lib/univ_d/liblocal_SDL_d.dylib
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  define PREBUILDCMDS
	@echo Running pre-build commands
	rsync -av --exclude '.*' ../../dev/pc_/ ../..
	/usr/libexec/PlistBuddy -c "Set :LSMinimumSystemVersion 10.7" ../../Info_d.plist
	mkdir -p ../../game_d.app/Contents
	rsync -av --exclude '.*' ../../lib/univ_d/ ../../game_d.app/Contents/MacOS
	rsync -av --exclude '.*' --delete ../../assets/ ../../game_d.app/Contents/assets
	rsync -av --exclude '.*' --delete ../../Resources/ ../../game_d.app/Contents/Resources
	rsync -av --exclude '.*' ../../Info_d.plist ../../game_d.app/Contents/Info.plist
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = obj/Release/game
  TARGETDIR  = ../../game.app/Contents/MacOS
  TARGET     = $(TARGETDIR)/game
  DEFINES   += -D_MACOSX -DNDEBUG -DDISABLE_CPP11 -DGLEW_NO_GLU -DDISABLE_CG -DOGG_DLL= -DVORBIS_DLL= -DVORBISFILE_DLL= -DDISABLE_DX9 -DDISABLE_WGL -DTINYXML_DLL= -DTINYXML_EXT= -DZENI_DLL= -DZENI_EXT= -DZENI_AUDIO_DLL= -DZENI_AUDIO_EXT= -DZENI_CORE_DLL= -DZENI_CORE_EXT= -DZENI_GRAPHICS_DLL= -DZENI_GRAPHICS_EXT= -DZENI_NET_DLL= -DZENI_NET_EXT= -DZENI_REST_DLL= -DZENI_REST_EXT=
  INCLUDES  += -I../../jni/application -I../../jni/external/zenilib -I../../jni/external/zenilib/zeni_rest -I../../jni/external/zenilib/zeni_graphics -I../../jni/external/zenilib/zeni_net -I../../jni/external/zenilib/zeni_core -I../../jni/external/zenilib/zeni_audio -I../../jni/external/libvorbis/include -I../../jni/external/libogg/include -I../../jni/external/zenilib/zeni -I../../jni/external/sdl_net -I../../jni/external/sdl -I../../jni/external/tinyxml
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -Wall -Qunused-arguments -stdlib=libc++ -ffast-math -fpch-preprocess -Wall
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L../../lib/univ -Wl,-x -stdlib=libc++
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LIBS      += -lzeni_rest -lzeni_graphics -lzeni_net -lzeni_core -lzeni_audio -lzeni -llocal_SDL -framework Cocoa -framework OpenGL
  LDDEPS    += ../../lib/univ/libzeni_rest.dylib ../../lib/univ/libzeni_graphics.dylib ../../lib/univ/libzeni_net.dylib ../../lib/univ/libzeni_core.dylib ../../lib/univ/libzeni_audio.dylib ../../lib/univ/libzeni.dylib ../../lib/univ/liblocal_SDL.dylib
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  define PREBUILDCMDS
	@echo Running pre-build commands
	rsync -av --exclude '.*' ../../dev/pc_/ ../..
	/usr/libexec/PlistBuddy -c "Set :LSMinimumSystemVersion 10.7" ../../Info.plist
	mkdir -p ../../game.app/Contents
	rsync -av --exclude '.*' ../../lib/univ/ ../../game.app/Contents/MacOS
	rsync -av --exclude '.*' --delete ../../assets/ ../../game.app/Contents/assets
	rsync -av --exclude '.*' --delete ../../Resources/ ../../game.app/Contents/Resources
	rsync -av --exclude '.*' ../../Info.plist ../../game.app/Contents/Info.plist
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debuguniv)
  OBJDIR     = obj/Universal/Debug/game
  TARGETDIR  = ../../game_d.app/Contents/MacOS
  TARGET     = $(TARGETDIR)/game_d
  DEFINES   += -D_MACOSX -D_DEBUG -DDEBUG -DTEST_NASTY_CONDITIONS -DDISABLE_CPP11 -DGLEW_NO_GLU -DDISABLE_CG -DOGG_DLL= -DVORBIS_DLL= -DVORBISFILE_DLL= -DDISABLE_DX9 -DDISABLE_WGL -DTINYXML_DLL= -DTINYXML_EXT= -DZENI_DLL= -DZENI_EXT= -DZENI_AUDIO_DLL= -DZENI_AUDIO_EXT= -DZENI_CORE_DLL= -DZENI_CORE_EXT= -DZENI_GRAPHICS_DLL= -DZENI_GRAPHICS_EXT= -DZENI_NET_DLL= -DZENI_NET_EXT= -DZENI_REST_DLL= -DZENI_REST_EXT=
  INCLUDES  += -I../../jni/application -I../../jni/external/zenilib -I../../jni/external/zenilib/zeni_rest -I../../jni/external/zenilib/zeni_graphics -I../../jni/external/zenilib/zeni_net -I../../jni/external/zenilib/zeni_core -I../../jni/external/zenilib/zeni_audio -I../../jni/external/libvorbis/include -I../../jni/external/libogg/include -I../../jni/external/zenilib/zeni -I../../jni/external/sdl_net -I../../jni/external/sdl -I../../jni/external/tinyxml
  CPPFLAGS  +=  $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -g -Wall -arch i386 -arch x86_64 -Qunused-arguments -stdlib=libc++ -ffast-math -fpch-preprocess -Wall
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L../../lib/univ_d -arch i386 -arch x86_64 -stdlib=libc++
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LIBS      += -lzeni_rest_d -lzeni_graphics_d -lzeni_net_d -lzeni_core_d -lzeni_audio_d -lzeni_d -llocal_SDL_d -framework Cocoa -framework OpenGL
  LDDEPS    += ../../lib/univ_d/libzeni_rest_d.dylib ../../lib/univ_d/libzeni_graphics_d.dylib ../../lib/univ_d/libzeni_net_d.dylib ../../lib/univ_d/libzeni_core_d.dylib ../../lib/univ_d/libzeni_audio_d.dylib ../../lib/univ_d/libzeni_d.dylib ../../lib/univ_d/liblocal_SDL_d.dylib
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  define PREBUILDCMDS
	@echo Running pre-build commands
	rsync -av --exclude '.*' ../../dev/pc_/ ../..
	/usr/libexec/PlistBuddy -c "Set :LSMinimumSystemVersion 10.7" ../../Info_d.plist
	mkdir -p ../../game_d.app/Contents
	rsync -av --exclude '.*' ../../lib/univ_d/ ../../game_d.app/Contents/MacOS
	rsync -av --exclude '.*' --delete ../../assets/ ../../game_d.app/Contents/assets
	rsync -av --exclude '.*' --delete ../../Resources/ ../../game_d.app/Contents/Resources
	rsync -av --exclude '.*' ../../Info_d.plist ../../game_d.app/Contents/Info.plist
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),releaseuniv)
  OBJDIR     = obj/Universal/Release/game
  TARGETDIR  = ../../game.app/Contents/MacOS
  TARGET     = $(TARGETDIR)/game
  DEFINES   += -D_MACOSX -DNDEBUG -DDISABLE_CPP11 -DGLEW_NO_GLU -DDISABLE_CG -DOGG_DLL= -DVORBIS_DLL= -DVORBISFILE_DLL= -DDISABLE_DX9 -DDISABLE_WGL -DTINYXML_DLL= -DTINYXML_EXT= -DZENI_DLL= -DZENI_EXT= -DZENI_AUDIO_DLL= -DZENI_AUDIO_EXT= -DZENI_CORE_DLL= -DZENI_CORE_EXT= -DZENI_GRAPHICS_DLL= -DZENI_GRAPHICS_EXT= -DZENI_NET_DLL= -DZENI_NET_EXT= -DZENI_REST_DLL= -DZENI_REST_EXT=
  INCLUDES  += -I../../jni/application -I../../jni/external/zenilib -I../../jni/external/zenilib/zeni_rest -I../../jni/external/zenilib/zeni_graphics -I../../jni/external/zenilib/zeni_net -I../../jni/external/zenilib/zeni_core -I../../jni/external/zenilib/zeni_audio -I../../jni/external/libvorbis/include -I../../jni/external/libogg/include -I../../jni/external/zenilib/zeni -I../../jni/external/sdl_net -I../../jni/external/sdl -I../../jni/external/tinyxml
  CPPFLAGS  +=  $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -Wall -arch i386 -arch x86_64 -Qunused-arguments -stdlib=libc++ -ffast-math -fpch-preprocess -Wall
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L../../lib/univ -Wl,-x -arch i386 -arch x86_64 -stdlib=libc++
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LIBS      += -lzeni_rest -lzeni_graphics -lzeni_net -lzeni_core -lzeni_audio -lzeni -llocal_SDL -framework Cocoa -framework OpenGL
  LDDEPS    += ../../lib/univ/libzeni_rest.dylib ../../lib/univ/libzeni_graphics.dylib ../../lib/univ/libzeni_net.dylib ../../lib/univ/libzeni_core.dylib ../../lib/univ/libzeni_audio.dylib ../../lib/univ/libzeni.dylib ../../lib/univ/liblocal_SDL.dylib
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(RESOURCES) $(ARCH) $(LIBS) $(LDFLAGS)
  define PREBUILDCMDS
	@echo Running pre-build commands
	rsync -av --exclude '.*' ../../dev/pc_/ ../..
	/usr/libexec/PlistBuddy -c "Set :LSMinimumSystemVersion 10.7" ../../Info.plist
	mkdir -p ../../game.app/Contents
	rsync -av --exclude '.*' ../../lib/univ/ ../../game.app/Contents/MacOS
	rsync -av --exclude '.*' --delete ../../assets/ ../../game.app/Contents/assets
	rsync -av --exclude '.*' --delete ../../Resources/ ../../game.app/Contents/Resources
	rsync -av --exclude '.*' ../../Info.plist ../../game.app/Contents/Info.plist
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/ApplicationAppDelegate.o \
	$(OBJDIR)/SDLMain.o \
	$(OBJDIR)/bootstrap.o \
	$(OBJDIR)/SVSObject.o \
	$(OBJDIR)/SVSParser.o \
	$(OBJDIR)/SVSScene.o \
	$(OBJDIR)/SVSSocket.o \
	$(OBJDIR)/SVSViewerState.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET) $(dir $(TARGETDIR))PkgInfo $(dir $(TARGETDIR))Info.plist
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking game
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

$(dir $(TARGETDIR))PkgInfo:
$(dir $(TARGETDIR))Info.plist:

clean:
	@echo Cleaning game
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
ifeq (posix,$(SHELLTYPE))
	-$(SILENT) cp $< $(OBJDIR)
else
	$(SILENT) xcopy /D /Y /Q "$(subst /,\,$<)" "$(subst /,\,$(OBJDIR))" 1>nul
endif
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/ApplicationAppDelegate.o: ../../jni/external/sdl/SDLmain/ApplicationAppDelegate.mm
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SDLMain.o: ../../jni/external/sdl/SDLmain/SDLMain.mm
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/bootstrap.o: ../../jni/application/bootstrap.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SVSObject.o: ../../jni/application/SVSObject.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SVSParser.o: ../../jni/application/SVSParser.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SVSScene.o: ../../jni/application/SVSScene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SVSSocket.o: ../../jni/application/SVSSocket.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/SVSViewerState.o: ../../jni/application/SVSViewerState.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
